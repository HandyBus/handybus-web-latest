name: PR Labeler
on:
  pull_request:
    types: [opened, edited]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Label PR based on title
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prTitle = context.payload.pull_request.title.toLowerCase();
            const prBody = context.payload.pull_request.body ? context.payload.pull_request.body.toLowerCase() : '';

            // 타입 패턴 정의 (정규식으로 확장 가능)
            const typePatterns = {
              '🔖 release': ['release'],
              '✨ feat': ['feat'],
              '🐛 fix': ['fix', 'bugfix'],
              '🔥 hotfix': ['hotfix'],
              '🎨 design': ['design', 'ui', 'ux'],
              '📚 docs': ['docs', 'documentation'],
              '🧹 chore': ['chore'],
              '🔄 refactor': ['refactor'],
              '🧪 test': ['test'],
              '🖋️ style': ['style']
            };

            // 타입에 맞는 라벨 찾기
            const labelsToAdd = [];
            for (const [label, patterns] of Object.entries(typePatterns)) {
              if (patterns.some(pattern => 
                prTitle.includes(pattern) || 
                (prTitle.startsWith(pattern + ':') || prTitle.startsWith(pattern + '(')) ||
                prBody.includes(pattern + ':')
              )) {
                labelsToAdd.push(label);
              }
            }

            // 라벨 추가
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labelsToAdd
              });
              console.log(`Added labels: ${labelsToAdd.join(', ')}`);
            } else {
              console.log('No matching labels found');
            }
